function Score.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push argument 0
pop this 3
push argument 1
pop this 4
push argument 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5
call Array.new 1
pop this 2
push constant 0
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push argument 2
pop this 2
label IF_END0
push pointer 0
return
function Score.init 0
push argument 0
pop pointer 0
push pointer 0
call Score.draw 1
pop temp 0
push constant 0
return
function Score.next 1
push argument 0
pop pointer 0
push this 3
call Pellets.getCapturedCount 1
push constant 10
call Math.multiply 2
pop local 0
push local 0
push this 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 0
push this 0
push this 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
pop this 1
label IF_FALSE1
push pointer 0
call Score.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Score.updateLeaderboard 3
push argument 0
pop pointer 0
push this 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 2
push local 0
push this 2
add
pop pointer 1
push that 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
pop local 1
label WHILE_EXP1
push local 1
push local 0
gt
not
if-goto WHILE_END1
push local 1
push this 2
add
push local 1
push constant 1
sub
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 2
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Score.getHighscores 0
push argument 0
pop pointer 0
push this 2
return
function Score.draw 1
push argument 0
pop pointer 0
push constant 3
push constant 46
call Output.moveCursor 2
pop temp 0
push constant 6
call String.new 1
push constant 83
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 4
push constant 46
call Output.moveCursor 2
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 6
push constant 46
call Output.moveCursor 2
pop temp 0
push constant 11
call String.new 1
push constant 76
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 68
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 66
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 68
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push constant 8
push local 0
add
push constant 46
call Output.moveCursor 2
pop temp 0
push local 0
push this 2
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Score.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
